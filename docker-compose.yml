version: '3'

networks:
    nginx-php7.4-mysql8-node:

services:
    #nginx
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            - "8000:80"
        volumes:
            - ./:/var/www/project
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php7.4-service
            - mysql8-service
        networks:
            - nginx-php7.4-mysql8-node

    #php
    php7.4-service:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: php7.4-container
        ports:
            - "9000:9000"
        volumes:
            - ./:/var/www/project
        networks:
            - nginx-php7.4-mysql8-node

    #mysql
    mysql8-service:
        image: mysql:8
        container_name: mysql8-container
        ports:
            - "3308:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always # always restart unless stopped manually
        environment:
            MYSQL_ROOT_PASSWORD: admin
            MYSQL_PASSWORD: admin
        networks:
            - nginx-php7.4-mysql8-node

    #node
    node-service:
        image: node:latest
        container_name: node-container
        volumes:
            - ./:/var/www/project
        working_dir: /var/www/project
        networks:
            - nginx-php7.4-mysql8-node

    #elastic search
    my-elast:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
      ports:
        - 9200:9000
        - 9200:9200
        - 9300:9300
      volumes:
        - ./:/usr/share/elasticsearch/data
      environment:
        - "discovery.type=single-node"


    sample:
        container_name: react-app
        build:
            context: .
            dockerfile: ./frontend/Dockerfile
        volumes:
            - './:/var/www/project/frontend'
            - '/var/www/project/frontend/node_modules'
        ports:
            - 3000:3000
        environment:
            - CHOKIDAR_USEPOLLING=true